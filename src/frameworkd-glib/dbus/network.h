/* Generated by dbus-binding-tool; do not edit! */

#include <glib/gtypes.h>
#include <glib/gerror.h>
#include <dbus/dbus-glib.h>

G_BEGIN_DECLS

#ifndef DBUS_GLIB_CLIENT_WRAPPERS_org_freesmartphone_GSM_Network
#define DBUS_GLIB_CLIENT_WRAPPERS_org_freesmartphone_GSM_Network

static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_Network_register (DBusGProxy *proxy, GError **error)

{
  return dbus_g_proxy_call (proxy, "Register", error, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_Network_register_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_Network_register_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_Network_register_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_Network_register_async (DBusGProxy *proxy, org_freesmartphone_GSM_Network_register_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "Register", org_freesmartphone_GSM_Network_register_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_Network_unregister (DBusGProxy *proxy, GError **error)

{
  return dbus_g_proxy_call (proxy, "Unregister", error, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_Network_unregister_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_Network_unregister_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_Network_unregister_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_Network_unregister_async (DBusGProxy *proxy, org_freesmartphone_GSM_Network_unregister_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "Unregister", org_freesmartphone_GSM_Network_unregister_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_Network_get_status (DBusGProxy *proxy, GHashTable** OUT_status, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetStatus", error, G_TYPE_INVALID, dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE), OUT_status, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_Network_get_status_reply) (DBusGProxy *proxy, GHashTable *OUT_status, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_Network_get_status_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  GHashTable* OUT_status;
  dbus_g_proxy_end_call (proxy, call, &error, dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE), &OUT_status, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_Network_get_status_reply)data->cb) (proxy, OUT_status, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_Network_get_status_async (DBusGProxy *proxy, org_freesmartphone_GSM_Network_get_status_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetStatus", org_freesmartphone_GSM_Network_get_status_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_Network_get_signal_strength (DBusGProxy *proxy, gint* OUT_signal_strength, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetSignalStrength", error, G_TYPE_INVALID, G_TYPE_INT, OUT_signal_strength, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_Network_get_signal_strength_reply) (DBusGProxy *proxy, gint OUT_signal_strength, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_Network_get_signal_strength_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  gint OUT_signal_strength;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INT, &OUT_signal_strength, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_Network_get_signal_strength_reply)data->cb) (proxy, OUT_signal_strength, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_Network_get_signal_strength_async (DBusGProxy *proxy, org_freesmartphone_GSM_Network_get_signal_strength_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetSignalStrength", org_freesmartphone_GSM_Network_get_signal_strength_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_Network_list_providers (DBusGProxy *proxy, GPtrArray** OUT_providers, GError **error)

{
  return dbus_g_proxy_call (proxy, "ListProviders", error, G_TYPE_INVALID, dbus_g_type_get_collection ("GPtrArray", dbus_g_type_get_struct ("GValueArray", G_TYPE_INT, G_TYPE_STRING, G_TYPE_STRING, G_TYPE_STRING, G_TYPE_INVALID)), OUT_providers, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_Network_list_providers_reply) (DBusGProxy *proxy, GPtrArray *OUT_providers, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_Network_list_providers_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  GPtrArray* OUT_providers;
  dbus_g_proxy_end_call (proxy, call, &error, dbus_g_type_get_collection ("GPtrArray", dbus_g_type_get_struct ("GValueArray", G_TYPE_INT, G_TYPE_STRING, G_TYPE_STRING, G_TYPE_STRING, G_TYPE_INVALID)), &OUT_providers, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_Network_list_providers_reply)data->cb) (proxy, OUT_providers, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_Network_list_providers_async (DBusGProxy *proxy, org_freesmartphone_GSM_Network_list_providers_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "ListProviders", org_freesmartphone_GSM_Network_list_providers_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_Network_register_with_provider (DBusGProxy *proxy, const gint IN_operator_code, GError **error)

{
  return dbus_g_proxy_call (proxy, "RegisterWithProvider", error, G_TYPE_INT, IN_operator_code, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_Network_register_with_provider_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_Network_register_with_provider_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_Network_register_with_provider_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_Network_register_with_provider_async (DBusGProxy *proxy, const gint IN_operator_code, org_freesmartphone_GSM_Network_register_with_provider_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "RegisterWithProvider", org_freesmartphone_GSM_Network_register_with_provider_async_callback, stuff, g_free, G_TYPE_INT, IN_operator_code, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_Network_get_country_code (DBusGProxy *proxy, char ** OUT_dial_code, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetCountryCode", error, G_TYPE_INVALID, G_TYPE_STRING, OUT_dial_code, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_Network_get_country_code_reply) (DBusGProxy *proxy, char * OUT_dial_code, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_Network_get_country_code_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  char * OUT_dial_code;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_STRING, &OUT_dial_code, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_Network_get_country_code_reply)data->cb) (proxy, OUT_dial_code, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_Network_get_country_code_async (DBusGProxy *proxy, org_freesmartphone_GSM_Network_get_country_code_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetCountryCode", org_freesmartphone_GSM_Network_get_country_code_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_Network_get_call_forwarding (DBusGProxy *proxy, GHashTable** OUT_status, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetCallForwarding", error, G_TYPE_INVALID, dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE), OUT_status, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_Network_get_call_forwarding_reply) (DBusGProxy *proxy, GHashTable *OUT_status, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_Network_get_call_forwarding_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  GHashTable* OUT_status;
  dbus_g_proxy_end_call (proxy, call, &error, dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE), &OUT_status, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_Network_get_call_forwarding_reply)data->cb) (proxy, OUT_status, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_Network_get_call_forwarding_async (DBusGProxy *proxy, org_freesmartphone_GSM_Network_get_call_forwarding_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetCallForwarding", org_freesmartphone_GSM_Network_get_call_forwarding_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_Network_enable_call_forwarding (DBusGProxy *proxy, const char * IN_reason, const char * IN_class, const char * IN_number, const gint IN_timeout, GError **error)

{
  return dbus_g_proxy_call (proxy, "EnableCallForwarding", error, G_TYPE_STRING, IN_reason, G_TYPE_STRING, IN_class, G_TYPE_STRING, IN_number, G_TYPE_INT, IN_timeout, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_Network_enable_call_forwarding_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_Network_enable_call_forwarding_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_Network_enable_call_forwarding_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_Network_enable_call_forwarding_async (DBusGProxy *proxy, const char * IN_reason, const char * IN_class, const char * IN_number, const gint IN_timeout, org_freesmartphone_GSM_Network_enable_call_forwarding_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "EnableCallForwarding", org_freesmartphone_GSM_Network_enable_call_forwarding_async_callback, stuff, g_free, G_TYPE_STRING, IN_reason, G_TYPE_STRING, IN_class, G_TYPE_STRING, IN_number, G_TYPE_INT, IN_timeout, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_Network_disable_call_forwarding (DBusGProxy *proxy, const char * IN_reason, const char * IN_class, GError **error)

{
  return dbus_g_proxy_call (proxy, "DisableCallForwarding", error, G_TYPE_STRING, IN_reason, G_TYPE_STRING, IN_class, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_Network_disable_call_forwarding_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_Network_disable_call_forwarding_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_Network_disable_call_forwarding_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_Network_disable_call_forwarding_async (DBusGProxy *proxy, const char * IN_reason, const char * IN_class, org_freesmartphone_GSM_Network_disable_call_forwarding_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "DisableCallForwarding", org_freesmartphone_GSM_Network_disable_call_forwarding_async_callback, stuff, g_free, G_TYPE_STRING, IN_reason, G_TYPE_STRING, IN_class, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_Network_set_calling_identification (DBusGProxy *proxy, const char * IN_visible, GError **error)

{
  return dbus_g_proxy_call (proxy, "SetCallingIdentification", error, G_TYPE_STRING, IN_visible, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_Network_set_calling_identification_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_Network_set_calling_identification_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_Network_set_calling_identification_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_Network_set_calling_identification_async (DBusGProxy *proxy, const char * IN_visible, org_freesmartphone_GSM_Network_set_calling_identification_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "SetCallingIdentification", org_freesmartphone_GSM_Network_set_calling_identification_async_callback, stuff, g_free, G_TYPE_STRING, IN_visible, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_Network_get_calling_identification (DBusGProxy *proxy, char ** OUT_visible, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetCallingIdentification", error, G_TYPE_INVALID, G_TYPE_STRING, OUT_visible, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_Network_get_calling_identification_reply) (DBusGProxy *proxy, char * OUT_visible, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_Network_get_calling_identification_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  char * OUT_visible;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_STRING, &OUT_visible, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_Network_get_calling_identification_reply)data->cb) (proxy, OUT_visible, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_Network_get_calling_identification_async (DBusGProxy *proxy, org_freesmartphone_GSM_Network_get_calling_identification_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetCallingIdentification", org_freesmartphone_GSM_Network_get_calling_identification_async_callback, stuff, g_free, G_TYPE_INVALID);
}
#endif /* defined DBUS_GLIB_CLIENT_WRAPPERS_org_freesmartphone_GSM_Network */

G_END_DECLS
