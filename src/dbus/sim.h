/* Generated by dbus-binding-tool; do not edit! */

#include <glib/gtypes.h>
#include <glib/gerror.h>
#include <dbus/dbus-glib.h>

G_BEGIN_DECLS

#ifndef DBUS_GLIB_CLIENT_WRAPPERS_org_freesmartphone_GSM_SIM
#define DBUS_GLIB_CLIENT_WRAPPERS_org_freesmartphone_GSM_SIM

static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_get_auth_status (DBusGProxy *proxy, char ** OUT_status, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetAuthStatus", error, G_TYPE_INVALID, G_TYPE_STRING, OUT_status, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_get_auth_status_reply) (DBusGProxy *proxy, char * OUT_status, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_get_auth_status_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  char * OUT_status;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_STRING, &OUT_status, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_get_auth_status_reply)data->cb) (proxy, OUT_status, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_get_auth_status_async (DBusGProxy *proxy, org_freesmartphone_GSM_SIM_get_auth_status_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetAuthStatus", org_freesmartphone_GSM_SIM_get_auth_status_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_send_auth_code (DBusGProxy *proxy, const char * IN_pin, GError **error)

{
  return dbus_g_proxy_call (proxy, "SendAuthCode", error, G_TYPE_STRING, IN_pin, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_send_auth_code_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_send_auth_code_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_send_auth_code_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_send_auth_code_async (DBusGProxy *proxy, const char * IN_pin, org_freesmartphone_GSM_SIM_send_auth_code_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "SendAuthCode", org_freesmartphone_GSM_SIM_send_auth_code_async_callback, stuff, g_free, G_TYPE_STRING, IN_pin, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_unlock (DBusGProxy *proxy, const char * IN_puk, const char * IN_new_pin, GError **error)

{
  return dbus_g_proxy_call (proxy, "Unlock", error, G_TYPE_STRING, IN_puk, G_TYPE_STRING, IN_new_pin, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_unlock_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_unlock_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_unlock_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_unlock_async (DBusGProxy *proxy, const char * IN_puk, const char * IN_new_pin, org_freesmartphone_GSM_SIM_unlock_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "Unlock", org_freesmartphone_GSM_SIM_unlock_async_callback, stuff, g_free, G_TYPE_STRING, IN_puk, G_TYPE_STRING, IN_new_pin, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_change_auth_code (DBusGProxy *proxy, const char * IN_old_pin, const char * IN_new_pin, GError **error)

{
  return dbus_g_proxy_call (proxy, "ChangeAuthCode", error, G_TYPE_STRING, IN_old_pin, G_TYPE_STRING, IN_new_pin, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_change_auth_code_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_change_auth_code_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_change_auth_code_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_change_auth_code_async (DBusGProxy *proxy, const char * IN_old_pin, const char * IN_new_pin, org_freesmartphone_GSM_SIM_change_auth_code_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "ChangeAuthCode", org_freesmartphone_GSM_SIM_change_auth_code_async_callback, stuff, g_free, G_TYPE_STRING, IN_old_pin, G_TYPE_STRING, IN_new_pin, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_set_auth_code_required (DBusGProxy *proxy, const gboolean IN_check, const char * IN_pin, GError **error)

{
  return dbus_g_proxy_call (proxy, "SetAuthCodeRequired", error, G_TYPE_BOOLEAN, IN_check, G_TYPE_STRING, IN_pin, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_set_auth_code_required_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_set_auth_code_required_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_set_auth_code_required_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_set_auth_code_required_async (DBusGProxy *proxy, const gboolean IN_check, const char * IN_pin, org_freesmartphone_GSM_SIM_set_auth_code_required_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "SetAuthCodeRequired", org_freesmartphone_GSM_SIM_set_auth_code_required_async_callback, stuff, g_free, G_TYPE_BOOLEAN, IN_check, G_TYPE_STRING, IN_pin, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_get_auth_code_required (DBusGProxy *proxy, gboolean* OUT_check, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetAuthCodeRequired", error, G_TYPE_INVALID, G_TYPE_BOOLEAN, OUT_check, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_get_auth_code_required_reply) (DBusGProxy *proxy, gboolean OUT_check, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_get_auth_code_required_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  gboolean OUT_check;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_BOOLEAN, &OUT_check, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_get_auth_code_required_reply)data->cb) (proxy, OUT_check, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_get_auth_code_required_async (DBusGProxy *proxy, org_freesmartphone_GSM_SIM_get_auth_code_required_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetAuthCodeRequired", org_freesmartphone_GSM_SIM_get_auth_code_required_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_get_sim_info (DBusGProxy *proxy, GHashTable** OUT_info, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetSimInfo", error, G_TYPE_INVALID, dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE), OUT_info, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_get_sim_info_reply) (DBusGProxy *proxy, GHashTable *OUT_info, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_get_sim_info_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  GHashTable* OUT_info;
  dbus_g_proxy_end_call (proxy, call, &error, dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE), &OUT_info, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_get_sim_info_reply)data->cb) (proxy, OUT_info, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_get_sim_info_async (DBusGProxy *proxy, org_freesmartphone_GSM_SIM_get_sim_info_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetSimInfo", org_freesmartphone_GSM_SIM_get_sim_info_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_send_generic_sim_command (DBusGProxy *proxy, const char * IN_command, char ** OUT_result, GError **error)

{
  return dbus_g_proxy_call (proxy, "SendGenericSimCommand", error, G_TYPE_STRING, IN_command, G_TYPE_INVALID, G_TYPE_STRING, OUT_result, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_send_generic_sim_command_reply) (DBusGProxy *proxy, char * OUT_result, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_send_generic_sim_command_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  char * OUT_result;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_STRING, &OUT_result, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_send_generic_sim_command_reply)data->cb) (proxy, OUT_result, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_send_generic_sim_command_async (DBusGProxy *proxy, const char * IN_command, org_freesmartphone_GSM_SIM_send_generic_sim_command_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "SendGenericSimCommand", org_freesmartphone_GSM_SIM_send_generic_sim_command_async_callback, stuff, g_free, G_TYPE_STRING, IN_command, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_send_restricted_sim_command (DBusGProxy *proxy, const gint IN_command, const gint IN_fileid, const gint IN_p1, const gint IN_p2, const gint IN_p3, const char * IN_data, char ** OUT_result, GError **error)

{
  return dbus_g_proxy_call (proxy, "SendRestrictedSimCommand", error, G_TYPE_INT, IN_command, G_TYPE_INT, IN_fileid, G_TYPE_INT, IN_p1, G_TYPE_INT, IN_p2, G_TYPE_INT, IN_p3, G_TYPE_STRING, IN_data, G_TYPE_INVALID, G_TYPE_STRING, OUT_result, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_send_restricted_sim_command_reply) (DBusGProxy *proxy, char * OUT_result, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_send_restricted_sim_command_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  char * OUT_result;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_STRING, &OUT_result, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_send_restricted_sim_command_reply)data->cb) (proxy, OUT_result, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_send_restricted_sim_command_async (DBusGProxy *proxy, const gint IN_command, const gint IN_fileid, const gint IN_p1, const gint IN_p2, const gint IN_p3, const char * IN_data, org_freesmartphone_GSM_SIM_send_restricted_sim_command_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "SendRestrictedSimCommand", org_freesmartphone_GSM_SIM_send_restricted_sim_command_async_callback, stuff, g_free, G_TYPE_INT, IN_command, G_TYPE_INT, IN_fileid, G_TYPE_INT, IN_p1, G_TYPE_INT, IN_p2, G_TYPE_INT, IN_p3, G_TYPE_STRING, IN_data, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_get_home_zones (DBusGProxy *proxy, GPtrArray** OUT_homezones, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetHomeZones", error, G_TYPE_INVALID, dbus_g_type_get_collection ("GPtrArray", dbus_g_type_get_struct ("GValueArray", G_TYPE_STRING, G_TYPE_INT, G_TYPE_INT, G_TYPE_INT, G_TYPE_INVALID)), OUT_homezones, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_get_home_zones_reply) (DBusGProxy *proxy, GPtrArray *OUT_homezones, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_get_home_zones_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  GPtrArray* OUT_homezones;
  dbus_g_proxy_end_call (proxy, call, &error, dbus_g_type_get_collection ("GPtrArray", dbus_g_type_get_struct ("GValueArray", G_TYPE_STRING, G_TYPE_INT, G_TYPE_INT, G_TYPE_INT, G_TYPE_INVALID)), &OUT_homezones, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_get_home_zones_reply)data->cb) (proxy, OUT_homezones, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_get_home_zones_async (DBusGProxy *proxy, org_freesmartphone_GSM_SIM_get_home_zones_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetHomeZones", org_freesmartphone_GSM_SIM_get_home_zones_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_get_phonebook_info (DBusGProxy *proxy, GHashTable** OUT_info, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetPhonebookInfo", error, G_TYPE_INVALID, dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE), OUT_info, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_get_phonebook_info_reply) (DBusGProxy *proxy, GHashTable *OUT_info, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_get_phonebook_info_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  GHashTable* OUT_info;
  dbus_g_proxy_end_call (proxy, call, &error, dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE), &OUT_info, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_get_phonebook_info_reply)data->cb) (proxy, OUT_info, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_get_phonebook_info_async (DBusGProxy *proxy, org_freesmartphone_GSM_SIM_get_phonebook_info_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetPhonebookInfo", org_freesmartphone_GSM_SIM_get_phonebook_info_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_delete_entry (DBusGProxy *proxy, const gint IN_index, GError **error)

{
  return dbus_g_proxy_call (proxy, "DeleteEntry", error, G_TYPE_INT, IN_index, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_delete_entry_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_delete_entry_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_delete_entry_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_delete_entry_async (DBusGProxy *proxy, const gint IN_index, org_freesmartphone_GSM_SIM_delete_entry_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "DeleteEntry", org_freesmartphone_GSM_SIM_delete_entry_async_callback, stuff, g_free, G_TYPE_INT, IN_index, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_store_entry (DBusGProxy *proxy, const gint IN_index, const char * IN_name, const char * IN_number, GError **error)

{
  return dbus_g_proxy_call (proxy, "StoreEntry", error, G_TYPE_INT, IN_index, G_TYPE_STRING, IN_name, G_TYPE_STRING, IN_number, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_store_entry_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_store_entry_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_store_entry_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_store_entry_async (DBusGProxy *proxy, const gint IN_index, const char * IN_name, const char * IN_number, org_freesmartphone_GSM_SIM_store_entry_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "StoreEntry", org_freesmartphone_GSM_SIM_store_entry_async_callback, stuff, g_free, G_TYPE_INT, IN_index, G_TYPE_STRING, IN_name, G_TYPE_STRING, IN_number, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_retrieve_entry (DBusGProxy *proxy, const gint IN_index, char ** OUT_name, char ** OUT_number, GError **error)

{
  return dbus_g_proxy_call (proxy, "RetrieveEntry", error, G_TYPE_INT, IN_index, G_TYPE_INVALID, G_TYPE_STRING, OUT_name, G_TYPE_STRING, OUT_number, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_retrieve_entry_reply) (DBusGProxy *proxy, char * OUT_name, char * OUT_number, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_retrieve_entry_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  char * OUT_name;
  char * OUT_number;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_STRING, &OUT_name, G_TYPE_STRING, &OUT_number, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_retrieve_entry_reply)data->cb) (proxy, OUT_name, OUT_number, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_retrieve_entry_async (DBusGProxy *proxy, const gint IN_index, org_freesmartphone_GSM_SIM_retrieve_entry_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "RetrieveEntry", org_freesmartphone_GSM_SIM_retrieve_entry_async_callback, stuff, g_free, G_TYPE_INT, IN_index, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_get_messagebook_info (DBusGProxy *proxy, GHashTable** OUT_info, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetMessagebookInfo", error, G_TYPE_INVALID, dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE), OUT_info, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_get_messagebook_info_reply) (DBusGProxy *proxy, GHashTable *OUT_info, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_get_messagebook_info_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  GHashTable* OUT_info;
  dbus_g_proxy_end_call (proxy, call, &error, dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE), &OUT_info, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_get_messagebook_info_reply)data->cb) (proxy, OUT_info, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_get_messagebook_info_async (DBusGProxy *proxy, org_freesmartphone_GSM_SIM_get_messagebook_info_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetMessagebookInfo", org_freesmartphone_GSM_SIM_get_messagebook_info_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_get_service_center_number (DBusGProxy *proxy, char ** OUT_number, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetServiceCenterNumber", error, G_TYPE_INVALID, G_TYPE_STRING, OUT_number, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_get_service_center_number_reply) (DBusGProxy *proxy, char * OUT_number, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_get_service_center_number_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  char * OUT_number;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_STRING, &OUT_number, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_get_service_center_number_reply)data->cb) (proxy, OUT_number, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_get_service_center_number_async (DBusGProxy *proxy, org_freesmartphone_GSM_SIM_get_service_center_number_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetServiceCenterNumber", org_freesmartphone_GSM_SIM_get_service_center_number_async_callback, stuff, g_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_set_service_center_number (DBusGProxy *proxy, const char * IN_number, GError **error)

{
  return dbus_g_proxy_call (proxy, "SetServiceCenterNumber", error, G_TYPE_STRING, IN_number, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_set_service_center_number_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_set_service_center_number_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_set_service_center_number_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_set_service_center_number_async (DBusGProxy *proxy, const char * IN_number, org_freesmartphone_GSM_SIM_set_service_center_number_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "SetServiceCenterNumber", org_freesmartphone_GSM_SIM_set_service_center_number_async_callback, stuff, g_free, G_TYPE_STRING, IN_number, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_delete_message (DBusGProxy *proxy, const gint IN_index, GError **error)

{
  return dbus_g_proxy_call (proxy, "DeleteMessage", error, G_TYPE_INT, IN_index, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_delete_message_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_delete_message_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_delete_message_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_delete_message_async (DBusGProxy *proxy, const gint IN_index, org_freesmartphone_GSM_SIM_delete_message_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "DeleteMessage", org_freesmartphone_GSM_SIM_delete_message_async_callback, stuff, g_free, G_TYPE_INT, IN_index, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_store_message (DBusGProxy *proxy, const char * IN_recipient_number, const char * IN_contents, gint* OUT_index, GError **error)

{
  return dbus_g_proxy_call (proxy, "StoreMessage", error, G_TYPE_STRING, IN_recipient_number, G_TYPE_STRING, IN_contents, G_TYPE_INVALID, G_TYPE_INT, OUT_index, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_store_message_reply) (DBusGProxy *proxy, gint OUT_index, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_store_message_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  gint OUT_index;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INT, &OUT_index, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_store_message_reply)data->cb) (proxy, OUT_index, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_store_message_async (DBusGProxy *proxy, const char * IN_recipient_number, const char * IN_contents, org_freesmartphone_GSM_SIM_store_message_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "StoreMessage", org_freesmartphone_GSM_SIM_store_message_async_callback, stuff, g_free, G_TYPE_STRING, IN_recipient_number, G_TYPE_STRING, IN_contents, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_send_stored_message (DBusGProxy *proxy, const gint IN_index, gint* OUT_transaction_index, GError **error)

{
  return dbus_g_proxy_call (proxy, "SendStoredMessage", error, G_TYPE_INT, IN_index, G_TYPE_INVALID, G_TYPE_INT, OUT_transaction_index, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_send_stored_message_reply) (DBusGProxy *proxy, gint OUT_transaction_index, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_send_stored_message_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  gint OUT_transaction_index;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INT, &OUT_transaction_index, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_send_stored_message_reply)data->cb) (proxy, OUT_transaction_index, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_send_stored_message_async (DBusGProxy *proxy, const gint IN_index, org_freesmartphone_GSM_SIM_send_stored_message_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "SendStoredMessage", org_freesmartphone_GSM_SIM_send_stored_message_async_callback, stuff, g_free, G_TYPE_INT, IN_index, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
org_freesmartphone_GSM_SIM_retrieve_message (DBusGProxy *proxy, const gint IN_index, char ** OUT_sender_number, char ** OUT_contents, GError **error)

{
  return dbus_g_proxy_call (proxy, "RetrieveMessage", error, G_TYPE_INT, IN_index, G_TYPE_INVALID, G_TYPE_STRING, OUT_sender_number, G_TYPE_STRING, OUT_contents, G_TYPE_INVALID);
}

typedef void (*org_freesmartphone_GSM_SIM_retrieve_message_reply) (DBusGProxy *proxy, char * OUT_sender_number, char * OUT_contents, GError *error, gpointer userdata);

static void
org_freesmartphone_GSM_SIM_retrieve_message_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  char * OUT_sender_number;
  char * OUT_contents;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_STRING, &OUT_sender_number, G_TYPE_STRING, &OUT_contents, G_TYPE_INVALID);
  (*(org_freesmartphone_GSM_SIM_retrieve_message_reply)data->cb) (proxy, OUT_sender_number, OUT_contents, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
org_freesmartphone_GSM_SIM_retrieve_message_async (DBusGProxy *proxy, const gint IN_index, org_freesmartphone_GSM_SIM_retrieve_message_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_new (DBusGAsyncData, 1);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "RetrieveMessage", org_freesmartphone_GSM_SIM_retrieve_message_async_callback, stuff, g_free, G_TYPE_INT, IN_index, G_TYPE_INVALID);
}
#endif /* defined DBUS_GLIB_CLIENT_WRAPPERS_org_freesmartphone_GSM_SIM */

G_END_DECLS
